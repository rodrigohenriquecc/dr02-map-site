/* global L, JSZip, shp, turf */

/* ‚Ä¶ LISTAS DE ARQUIVOS E META-DADOS (mesmo conte√∫do) ‚Ä¶ */
/* ‚Ä¶ mapa, painel, fun√ß√µes addLabel / zoomGlobal idem ‚Ä¶ */

/* ---------- Estilo dos marcadores pequenos ----------- */
const dotOpt = {
  radius: 5,
  color:  '#1976d2',
  weight: 2,
  fillColor: '#1976d2',
  fillOpacity: 1
};

/* ---------- UI permanece igual (selRod, btnKm) -------- */

/* ---------- RC (.zip) ‚Äî sem mudan√ßas ------------------ */
Promise.all(RC_ZIPS.map(async zip=>{ /* ‚Ä¶ id√™ntico ‚Ä¶ */ })).then(zoomGlobal);

/* ---------- KMZ -> GeoJSON ---------------------------- */
KMZ_FILES.forEach(async file=>{
  /* ‚Ä¶ (mesmo c√≥digo para carregar) ‚Ä¶ */

    rodLayers[title]=lyr; painel.addOverlay(lyr,'üìÑ '+title);
    atualizarSelect();

    /* marcador in√≠cio/fim (se vier no JSON) */
    const meta = metaRod[title];
    if(meta && meta.iniLat){
      L.circleMarker([meta.iniLat, meta.iniLon], dotOpt)
        .bindPopup(`${title}<br>Km ${meta.kmIni}`).addTo(mapa);
      L.circleMarker([meta.fimLat, meta.fimLon], dotOpt)
        .bindPopup(`${title}<br>Km ${meta.kmFim}`).addTo(mapa);
    }

    /* r√≥tulo SP ### (permanece) */
    /* ‚Ä¶ */
});

/* ---------- Localizar Km (apenas marcador mudou) ------ */
function localizarKm(){
  /* ‚Ä¶ valida√ß√µes iguais ‚Ä¶ */

  const [lon,lat]=pt.geometry.coordinates;

  L.circleMarker([lat,lon], dotOpt)              // ‚Üê bolinha
    .bindPopup(`<b>${rod}</b><br>KM ${kmVal.toFixed(3)}`)
    .addTo(mapa).openPopup();

  mapa.setView([lat,lon], 15);
}

/* ---------- kmlToGeoJSON (mesmo) ---------------------- */
